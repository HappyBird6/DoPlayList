1. 로그인 시 플리 목록 불러옴
2. 각 곡마다 넣을 플리 지정
3. 플리에 넣을 리스트 선택후 완료 누르면 넣은 리스트 목록만 따로 보여준 뒤(썸네일추가) 다시 완료(이때 youtube api로 곡검색)
4. 완료하면 youtube api로 플리에 리소스 추가


1. 구글 최초 로그인 시 accessCode, refreshCode 저장
2. 이거 굳이 refresh 코드로 해줘야하나?
3. 일단 저장된 accessCode를 통해서
    1. 플리 목록 불러옴(DB에 임시 저장)
    2. 불러온 플리 목록 보여주는 곳 잇음 GOOD 이겠다
    3. 링크를 넣으면 현재 프로세스 진행
    4. 각 곡마다 넣을 플리 지정해서 리스트화
    5. 완료 버튼 클릭시 리스트화 된 플리 목록 보여주기
        1. 노래제목 -> 플리제목
        2. 썸네일도 가져와야함.
    5-1. 이부분은 슬라이드 js 가져와서 페이지 넘어가는 디자인
    
    6. 최종 완료 버튼 -> youtube api로 플리에 리소스 추가


------------ 여기까지가 로그인, 플리 기능

1. 추가 후 만족도 조사
    > 불 만족 시 사유
    > 만족도 통계
2. 사람들이 넣은 노래 통계
    > 인기곡은 사이드에 추천하는것도 GOOD
3. 플리에 있는 곡을 긴 동영상으로 만들어주는 서비스

4. 광고 추가
------------ 여기까지가 계획된 프로젝트
여기부터는 선택

장르를 알수있는 기능?

정확도를 높이기 위한 chat gpt?


기능 ++
select에서 선택완료시 로딩 이펙트 + 자동으로 슬라이드 넘기기
재생목록 새로고침
목록 비우기
현재 상황 db에 저장 (beforeunload 이벤트리스너) -> 다음 로그인때도 그대로 남아있게
만족도 조사

통계 시스템 ++
플리의 조회수, 제목, 내용, 게시자 등의 내용 수집 + 사용자의 해당 플리 요청 횟수
사용자 별 플리 요청 수집 -> 연결점생성
플리 별 노래 정보 수집 -> 최근 많은 노래가 수집되면 추천


11개 재생목록 추가
804 -> 1354 : 550개 딱 50씩

할당량 10000이면 200곡 인당 5곡씩하면 40명정도밖에 못씀





1. 캐시 라이브러리 인기있고 간단한거 찾기
2. 적용해서 캐시활용해서 회원가입 기능
3. 캐시로 바꿀수있는거 적용

0. 링크 클릭하면 아래로 히스토리 쭉
1. 디비에서 자동 삭제(기간)
